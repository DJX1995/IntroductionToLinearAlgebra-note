)
# 介数传播
bn <- betweenness(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(bn), beta), type = "max betweenness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(bn), beta), type = "min betweenness", g_type = g_type)
)
# 度
deg <- degree(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(deg), beta), type = "max degree", g_type = g_type)
)
# 随机
rst <- rbind(
rst,
cbind(r = r, diffuse(g, sample(1:n, 1), beta), type = "random", g_type = g_type)
)
print(sprintf("Graph Type %s, Round %d Complete", g_type, r))
}
}
n
rst <- data.frame()
for (r in 1:round) {
for (g_type in c("small world", "scale free")) {
g <- ifelse(g_type == "small world",
sample_smallworld(1, n, 5, 0.05),
sample_pa(n,directed=F)) %>%
set_vertex_attr("color", value = "red")
# 聚集性与扩散的关系
cn <- closeness(g)
rst <- rbind(
rst,
cbind(r = r,diffuse(g, which.max(cn), beta), v_type = "max closeness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(cn), beta), v_type = "min closeness", g_type = g_type)
)
# 介数传播
bn <- betweenness(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(bn), beta), type = "max betweenness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(bn), beta), type = "min betweenness", g_type = g_type)
)
# 度
deg <- degree(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(deg), beta), type = "max degree", g_type = g_type)
)
# 随机
rst <- rbind(
rst,
cbind(r = r, diffuse(g, sample(1:n, 1), beta), type = "random", g_type = g_type)
)
print(sprintf("Graph Type %s, Round %d Complete", g_type, r))
}
}
g <- ifelse(g_type == "small world",
# 聚集性与扩散的关系
cn <- closeness(g)
）
ifelse(g_type == "small world",
sample_smallworld(1, n, 5, 0.05),
sample_pa(n,directed=F)) %>%
set_vertex_attr("color", value = "red")
g <- if (g_type == "small world") {
sample_smallworld(1, n, 5, 0.05)
} else {
sample_pa(n,directed=F)
}  %>% set_vertex_attr("color", value = "red")
rst <- data.frame()
for (r in 1:round) {
for (g_type in c("small world", "scale free")) {
g <- if (g_type == "small world") {
sample_smallworld(1, n, 5, 0.05)
} else {
sample_pa(n,directed=F)
}  %>% set_vertex_attr("color", value = "red")
# 聚集性与扩散的关系
cn <- closeness(g)
rst <- rbind(
rst,
cbind(r = r,diffuse(g, which.max(cn), beta), v_type = "max closeness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(cn), beta), v_type = "min closeness", g_type = g_type)
)
# 介数传播
bn <- betweenness(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(bn), beta), type = "max betweenness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(bn), beta), type = "min betweenness", g_type = g_type)
)
# 度
deg <- degree(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(deg), beta), type = "max degree", g_type = g_type)
)
# 随机
rst <- rbind(
rst,
cbind(r = r, diffuse(g, sample(1:n, 1), beta), type = "random", g_type = g_type)
)
print(sprintf("Graph Type %s, Round %d Complete", g_type, r))
}
}
rst <- data.frame()
for (r in 1:round) {
for (g_type in c("small world", "scale free")) {
g <- if (g_type == "small world") {
sample_smallworld(1, n, 5, 0.05)
} else {
sample_pa(n,directed=F)
}
g <- set_vertex_attr(g,"color", value = "red")
# 聚集性与扩散的关系
cn <- closeness(g)
rst <- rbind(
rst,
cbind(r = r,diffuse(g, which.max(cn), beta), v_type = "max closeness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(cn), beta), v_type = "min closeness", g_type = g_type)
)
# 介数传播
bn <- betweenness(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(bn), beta), type = "max betweenness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(bn), beta), type = "min betweenness", g_type = g_type)
)
# 度
deg <- degree(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(deg), beta), type = "max degree", g_type = g_type)
)
# 随机
rst <- rbind(
rst,
cbind(r = r, diffuse(g, sample(1:n, 1), beta), type = "random", g_type = g_type)
)
print(sprintf("Graph Type %s, Round %d Complete", g_type, r))
}
}
rst <- data.frame()
for (r in 1:round) {
for (g_type in c("small world", "scale free")) {
g <- if (g_type == "small world") {
sample_smallworld(1, n, 5, 0.05)
} else {
sample_pa(n,directed=F)
}
g <- set_vertex_attr(g,"color", value = "red")
# 聚集性与扩散的关系
cn <- closeness(g)
rst <- rbind(
rst,
cbind(r = r,diffuse(g, which.max(cn), beta), v_type = "max closeness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(cn), beta), v_type = "min closeness", g_type = g_type)
)
# 介数传播
bn <- betweenness(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(bn), beta), v_type = "max betweenness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(bn), beta), v_type = "min betweenness", g_type = g_type)
)
# 度
deg <- degree(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(deg), beta), v_type = "max degree", g_type = g_type)
)
# 随机
rst <- rbind(
rst,
cbind(r = r, diffuse(g, sample(1:n, 1), beta), v_type = "random", g_type = g_type)
)
print(sprintf("Graph Type %s, Round %d Complete", g_type, r))
}
}
rst
summary(rst)
rst_avg <- ddply(rst, .(t,v_type,g_type), function(x) c(avg_infect_num = mean(x$infect_num)))
rst_avg
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = type))
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=2)
p <- p + facet_grid(.~g_type)
p
p <- p + facet_grid(.~g_type,nrow=2)
?facet_grid
?facet_wrap
rst_avg <- ddply(rst, .(t,v_type,g_type), function(x) c(avg_infect_num = mean(x$infect_num)))
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=2)
p <- p + facet_grid(.~g_type,nrow=2)
p
rst_avg <- ddply(rst, .(t,v_type,g_type), function(x) c(avg_infect_num = mean(x$infect_num)))
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=2)
p <- p + facet_grid(.~g_type,ncol=1)
p
rst_avg <- ddply(rst, .(t,v_type,g_type), function(x) c(avg_infect_num = mean(x$infect_num)))
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=2)
p <- p + facet_grid(.~g_type)
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=2)
p <- p + facet_grid(.~g_type,nrow=2)
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=2)
p <- p + facet_wrap(.~g_type,nrow=2)
p
?facet_wrap
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=2)
p <- p + facet_wrap(~g_type)
p
p <- p + facet_wrap(~g_type, nrow=2)
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=2)
p <- p + facet_wrap(~g_type, nrow=1.2)
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=1.2)
p <- p + facet_wrap(~g_type, nrow=2)
p
rst <- data.frame()
for (r in 1:round) {
g <- sample_smallworld(1, n, 5, 0.05) %>%
set_vertex_attr(g,"color", value = "red")
for (beta in c(0.15,0.5,1)) {
rst <- rbind(
rst,
cbind(r = r, diffuse(g, sample(1:n, 1), beta), beta = sprintf("beta=%.2f", beta))
)
print(sprintf("Round=%d.Beta=%.2f", r, beta))
}
}
rst <- data.frame()
for (r in 1:round) {
g <- sample_smallworld(1, n, 5, 0.05) %>%
set_vertex_attr(g,"color", value = "red")
for (beta in c(0.15,0.5,1)) {
# rst <- rbind(
#   rst,
#   cbind(r = r, diffuse(g, sample(1:n, 1), beta), beta = sprintf("beta=%.2f", beta))
# )
print(sprintf("Round=%d.Beta=%.2f", r, beta))
}
}
rst <- data.frame()
for (r in 1:round) {
# g <- sample_smallworld(1, n, 5, 0.05) %>%
#    set_vertex_attr(g,"color", value = "red")
for (beta in c(0.15,0.5,1)) {
# rst <- rbind(
#   rst,
#   cbind(r = r, diffuse(g, sample(1:n, 1), beta), beta = sprintf("beta=%.2f", beta))
# )
print(sprintf("Round=%d.Beta=%.2f", r, beta))
}
}
rst <- data.frame()
for (r in 1:round) {
g <- sample_smallworld(1, n, 5, 0.05) %>%
set_vertex_attr("color", value = "red")
for (beta in c(0.2,0.6, 0.9)) {
# rst <- rbind(
#   rst,
#   cbind(r = r, diffuse(g, sample(1:n, 1), beta), beta = sprintf("beta=%.2f", beta))
# )
print(sprintf("Round=%d.Beta=%.2f", r, beta))
}
}
g <- sample_smallworld(1, n, 5, 0.05) %>%
set_vertex_attr("color", value = "red")
is.weighted(g)
is.directed(g)
set.seed(43545)
rst <- data.frame()
for (r in 1:round) {
g <- sample_smallworld(1, n, 5, 0.05) %>%
set_vertex_attr("color", value = "red")
source <- sample(1:n, 1)
for (beta in c(0.2,0.6, 0.9)) {
rst <- rbind(
rst,
cbind(r = r, diffuse(g, source, beta), beta = sprintf("beta=%.2f", beta))
)
print(sprintf("Round=%d.Beta=%.2f", r, beta))
}
}
head(rst)
rst_avg <- ddply(rst, .(t,beta), function(x) c(avg_infect_num = mean(x$infect_num)))
head(rst_avg)
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = beta))
p <- p + geom_line(size=1.2)
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = beta))
p <- p + geom_line(size=1.2)
p <- p + guides(color = guide_legend(title = "感染率beta"))
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = beta))
p <- p + geom_line(size=1.2)
p <- p + guides(color = guide_legend(title = "感染率beta"))
p <- p + scale_x_continuous(breaks=seq(0,50,by=5))
p <- p + scale_y_continuous(breaks=seq(0,1,by=0.1))
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = beta))
p <- p + geom_line(size=1.2)
p <- p + guides(color = guide_legend(title = "感染率beta"))
p <- p + scale_x_continuous(breaks=seq(0,50,by=5))
p <- p + scale_y_continuous(breaks=seq(0,1,by=0.1))
p <- p + ggtitle("传播曲线--不同感染率") + xlab("时间(迭代轮数)") + ylab("感染率")
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = beta))
p <- p + geom_line(size=1.2)
p <- p + guides(color = guide_legend(title = "感染率beta"))
p <- p + scale_x_continuous(breaks=seq(0,50,by=5))
p <- p + scale_y_continuous(breaks=seq(0,1,by=0.1))
p <- p + ggtitle("传播曲线--不同感染率") + xlab("时间(迭代轮数)") + ylab("感染率")
p <- p + theme(legend.text=element_text(size=15),
text = element_text(size=15))
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = beta))
p <- p + geom_line(size=1.2)
p <- p + guides(color = guide_legend(title = "感染率beta"))
p <- p + scale_x_continuous(breaks=seq(0,50,by=5))
p <- p + scale_y_continuous(breaks=seq(0,1,by=0.1))
p <- p + ggtitle("传播曲线--不同感染率") + xlab("时间(迭代轮数)") + ylab("感染率")
p <- p + theme(
text = element_text(size=15))
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = beta))
p <- p + geom_line(size=1.2)
p <- p + guides(color = guide_legend(title = "感染率beta"))
p <- p + scale_x_continuous(breaks=seq(0,50,by=5))
p <- p + scale_y_continuous(breaks=seq(0,1,by=0.1))
p <- p + ggtitle("传播曲线--不同感染率") + xlab("时间(迭代轮数)") + ylab("感染率")
p <- p + theme(legend.text=element_text(size=15),
text = element_text(size=15))
p
# 不同点在不同图上的效果
rst <- data.frame()
for (r in 1:round) {
for (g_type in c("small world", "scale free")) {
g <- if (g_type == "small world") {
sample_smallworld(1, n, 5, 0.05)
} else {
sample_pa(n,directed=F)
}
g <- set_vertex_attr(g,"color", value = "red")
# 聚集性与扩散的关系
cn <- closeness(g)
rst <- rbind(
rst,
cbind(r = r,diffuse(g, which.max(cn), beta), v_type = "max closeness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(cn), beta), v_type = "min closeness", g_type = g_type)
)
# 介数传播
bn <- betweenness(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(bn), beta), v_type = "max betweenness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(bn), beta), v_type = "min betweenness", g_type = g_type)
)
# 度
deg <- degree(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(deg), beta), v_type = "max degree", g_type = g_type)
)
# 随机
rst <- rbind(
rst,
cbind(r = r, diffuse(g, sample(1:n, 1), beta), v_type = "random", g_type = g_type)
)
print(sprintf("Graph Type %s, Round %d Complete", g_type, r))
}
}
rst_avg <- ddply(rst, .(t,v_type,g_type), function(x) c(avg_infect_num = mean(x$infect_num)))
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=1.2)
p <- p + facet_wrap(~g_type, nrow=2)
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=1.2)
p <- p + facet_wrap(~g_type, nrow=2)
p <- p + theme(legend.text=element_text(size=15),
text = element_text(size=15))
p
set.seed(3456)
round <- 10 # 轮数
beta <- 1 # 感染率
n <- 1500   # 图大小
# 不同点在不同图上的效果
rst <- data.frame()
for (r in 1:round) {
for (g_type in c("small world", "scale free")) {
g <- if (g_type == "small world") {
sample_smallworld(1, n, 5, 0.05)
} else {
sample_pa(n,directed=F)
}
g <- set_vertex_attr(g,"color", value = "red")
# 聚集性与扩散的关系
cn <- closeness(g)
rst <- rbind(
rst,
cbind(r = r,diffuse(g, which.max(cn), beta), v_type = "max closeness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(cn), beta), v_type = "min closeness", g_type = g_type)
)
# 介数传播
bn <- betweenness(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(bn), beta), v_type = "max betweenness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(bn), beta), v_type = "min betweenness", g_type = g_type)
)
# 度
deg <- degree(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(deg), beta), v_type = "max degree", g_type = g_type)
)
# 随机
rst <- rbind(
rst,
cbind(r = r, diffuse(g, sample(1:n, 1), beta), v_type = "random", g_type = g_type)
)
print(sprintf("Graph Type %s, Round %d Complete", g_type, r))
}
}
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=1.2)
p <- p + facet_wrap(~g_type, nrow=2)
p <- p + guides(color = guide_legend(title = "起始点类型"))
p <- p + scale_x_continuous(breaks=seq(0,50,by=5))
p <- p + scale_y_continuous(breaks=seq(0,1,by=0.1))
p <- p + theme(legend.text=element_text(size=15),
text = element_text(size=15))
p
beta
set.seed(45677)
round <- 20 # 轮数
beta <- 1 # 感染率
n <- 1500   # 图大小
# 不同点在不同图上的效果
rst <- data.frame()
for (r in 1:round) {
for (g_type in c("small world", "scale free")) {
g <- if (g_type == "small world") {
sample_smallworld(1, n, 5, 0.05)
} else {
sample_pa(n,directed=F)
}
g <- set_vertex_attr(g,"color", value = "red")
# 聚集性与扩散的关系
cn <- closeness(g)
rst <- rbind(
rst,
cbind(r = r,diffuse(g, which.max(cn), beta), v_type = "max closeness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(cn), beta), v_type = "min closeness", g_type = g_type)
)
# 介数传播
bn <- betweenness(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(bn), beta), v_type = "max betweenness", g_type = g_type),
cbind(r = r,diffuse(g, which.min(bn), beta), v_type = "min betweenness", g_type = g_type)
)
# 度
deg <- degree(g)
rst <- rbind(
rst,
cbind(r = r, diffuse(g, which.max(deg), beta), v_type = "max degree", g_type = g_type)
)
# 随机
rst <- rbind(
rst,
cbind(r = r, diffuse(g, sample(1:n, 1), beta), v_type = "random", g_type = g_type)
)
print(sprintf("Graph Type %s, Round %d Complete", g_type, r))
}
}
rst_avg <- ddply(rst, .(t,v_type,g_type), function(x) c(avg_infect_num = mean(x$infect_num)))
# 绘图
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=1.2)
p <- p + facet_wrap(~g_type, nrow=2)
p <- p + guides(color = guide_legend(title = "起始点类型"))
p <- p + scale_x_continuous(breaks=seq(0,50,by=5))
p <- p + scale_y_continuous(breaks=seq(0,1,by=0.1))
p <- p + theme(legend.text=element_text(size=15),
text = element_text(size=15))
p
p <- ggplot(data=rst_avg, aes(x=t, y=avg_infect_num/n, color = v_type))
p <- p + geom_line(size=1.2)
p <- p + facet_wrap(~g_type, nrow=2)
p <- p + guides(color = guide_legend(title = "初始点类型"))
p <- p + scale_x_continuous(breaks=seq(0,50,by=5))
p <- p + scale_y_continuous(breaks=seq(0,1,by=0.1))
p <- p + theme(legend.text=element_text(size=15),
text = element_text(size=15))
p <- p + ggtitle("传播曲线--不同初始点") + xlab("时间(迭代轮数)") + ylab("感染率")
p
setwd("F:/weiyun/524052035/数据科学资料/数学基础三件套/线性代数/Leanr Algbra by Gilbert Strang/notes")
